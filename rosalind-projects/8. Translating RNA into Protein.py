#napsal bych to kratsi ale jsem linej a pouzil jsem kod z /"--DNA to RNA to protein .py"

fileitemsrna = "AUGCUCUCAGCAUGUUUACUUCUCCCUCAUCUCCCAUCUACUGCUCAGGAACAUUACUGGGAGGCGGUAACAGUGAUUCACGAGGCUCCUAUUGACGCUACUACAAAGGCGACGUGUCAAACCAUGACACCAGUAAAGCAAAAAGUUCGGCUACGAGCAGGGUAUUUCGAUACAAUUAACAUGUUCUCUAGGUGUGGGGGUCUAUCCAAUGAUAAGCUUGUUAACAAUGGAGCUAGAUUACUAUCCCGCGUUCUCAAGCGUUUACAUAAAGUCGCGGUCACAUACCAGCCCGGUCUCGACCCCGGGGGCGACGUCGAUGGACAAAGACUGCAAGUAGAUACAGUCACAGCAAGCCCCGUAUUGUAUGUACUGUGUAUAUCUGACUCAAUCUAUCGAUCUUUGCCCCUCCCUUACGGUUGUGCCCGCCGUCUCCGCGGCGUGCGAACGUUGGAUCUGUACACGCUAACCUUCAGUAUUACGUCUUCUAGACCACGACUCAUCGGCGCGAUGGCACGCAAAGAAGCGUCCCUUGCUUGCGCGUCUUUAGGGCGGAACGAGGCUGAUGAAUUCUUAAGUAGCAUAUCUCUAUUAAGUUUGUUAAUGGCUACGAGACUUCUAGUGUCGCUAAUACUGAUACCCAAUACCGCUCAUGGGCAAUGGUUGUAUUGGGAGCAUCUCCCUAUGUUACGAGAACGCAGUCCCGUUCAGACGCUUGCCGGCUUGAGGUUCUCACUAGUGACGACGUGGGCUCAGGGCACCCUGAACUUAUCGGCCGCAUUGCCCAUCUCAGGUAGUACCGCAAAGGACUCCCGCUCGUCUACCAGAUAUAAAUUGGUGAAAUUAUACCGUGGACGGUCGAAGUAUUCCUCUACCCUAUACGUCGUCAAUGGCCUGCCGGUUUCGUCUCCGAUAAUGUGUUGCCCACUAUGGCGUGUAAGACAUUGGCCCCAGGUAUUUAAACUUUGGAAAUUUCCAACCAAUGUUGUGCGGCUCAGUCAAUUGCGGAAUGUCCAGUUUUAUUUACACGGUCCAGGCAGGAAGGAAGAGGAUAUGUAUGGCCUUAAACACCCCUGCCAGGGUACAGCGUUUGUUUUGGUUGCGGGUACACGAGGGGCUAACGGCGGAACAAGCAUUGAGUAUUCAUUCACUUGUGCUGAAUAUCCCCUCGGUCCUAACUUAUUCUCAAAACUAAACCUGAACCUUCAUAAGGAGGAUAUGUUGAGGAGGGCGCGGGUCAUAAGCGUAGUGUACGUCAGGGGGACUAUUGCGCGCCAAAUGCGAUGGUCCCUUUGGAGACAGUUACAGCGGUGGCAAGCCCACCCAAGAUUUAUAACCACCACUGAUGCGAUCUUGGGCUGCUAUCAAGUUGAGUACACAAUGACGGAGUUGGGUCUCUUAAGAGCAGCCUCCUAUUCACAUUUACCUGUGGCCCGACUCAAUGAGCCUACCAGCCACAAGCUCCUUACUACCUGGGCAGACCGUACGAAUAGUCCAAGGAAAUGGGCAUGUGUUUGCGGCCAUACGCAGAAACCUAUGAGAGCUUCCUUCUGCGGCCUUAUGUUAAGGCUCGGCUUAACGAGUGUAAUACGAACUGCCAAUCGUCCCUUUUGCCGUAUCCCUACCGCGUGCCGACAUGGCGCAGAAAGUUGUAGGCUACCUGGUUGGACCUCACUGCGAACCGAAUAUGACUGUUUGAUCACGCGGAGUUAUUUUUAUUCGCGCCACAUAGUCAGUUGCAGUCCAUUUAACGCCAUCCUGUACUCAUGCGCUAAAGCCGGUAGAGCUCCUAAAGCGCAAGCCAACCCUAGAGCUUCGGAUACUGUUACGAAGUACAUAUCACCGCGAGGCAUGCCGUUAGCCGCAGUACUAGAUUACGCAAGCUACUCCGGCAGAGGGAAGCUUCGCAAUUUCGGCCCCAAUCCAUGUGGAUGUUGUUUAGACUCCCCACCCGGUCCCAACCAUGACUGUACAACGGAAAAGUGUGAGAUUCCAAGAUAUGUAACUAAUGACAAACGAGGAAGAGUUGACCUGCCGUUACAACCAAAAAAGUUCCGGGAUAGAAGUGCUGAAAUGCCACUAUCGCACGGCUUGAUGAUGCUAGCAAAUAGAUGCGUUGCAGACCGAAGCCCAAAUCGAUCACCUCGAUCGCCUGUUGAGGGCGGCAUACCCAUUCGUCAUCUCCAAUUCCUUCCUGCCCCAGCCCGUCCGUCCCUCAUCCACGGUGUCAAUGCUUAUACACAAGGCGUCCUUUUCUUGUCCGAGCACAAGUGGACAGUCACCGUUAUAGGCUUCUUUCGGCGGAUCCGAACCUUCUGCAGCCACUAUGUAUCGGAAAAGCCCUCUCAACACGUACCUCAUCUUUAUCGCUGUCGUAAUUGUUACACGCAGGGUUUCGUAUGCCAAGUAGAAUGUACCCCGUCAGUGAGGCAAAGGCGCCCUGUGGCGAGGGCUAGCGUUAGAUAUGGUCCGUCCAGAAAGACGAACACAUUCGAUUCUUAUGUUACGCAAGCUUCGAGGACUGAGGUUUGGCAUUGGCAACGGUUAACGGUAUCGGUCGCGGUAUUGGGCACAUACGGCUCGUCUUCCAGAUUUGAAGUCGAUGCUACAGUGCCACUGCCAACUGGUAGGCUUUUAGCCCGUGGUCGACUGGGUGUUUAUGGACGAUGCCUCCAUACGAAGUUUUCCGCAGUGAACCCUUUCGUUAGUCUUUUGAUAGCUAUUAUUGCAGCAAUCGCAGGCGAUAAUAGUUGUUCUACGUUGAGUGUUGGUUAUCAGGAGAAUAUCGCUGGAGCGUCGUUGUAUAGACCAAUUAGGUUAGAUGUCAAUCCGGACCGUGGCGGCCUUUACAGCAUCUGUGCUAGCUACGUAAGAUUGCAAUGGAACCUAGUAAUAAUUAGGUUCCAGAUCGCAUCUCACAUUUGGCGAUUAGAACUGCAUAUCAGCUUGCGGGAUUGUUUAUUCUCGUCUAACGGUACCAGAACUUUGGUUGAGCCAUCCUUUCCGCUUAUAGUUACUCGGGUUCCGCCCAGGUCGUUAGUAUGCCCUCUCAUACGAAGGUUCGUACCCGACAUAAGUCACCGAUGGACGCUUGCUACCCUAAGUCAUCGAUGUAACGGCACCGCAAUAGUAGUCAUCUUAUUGGAACUCCAUCCCACACCACCACUUACUUACGCAUCGUCUCACCCGCAUGUGAUUAGACUCCCACUCCUUCUGACGCUUGCAACAACUGCAAGAUGUAUCUCCCAGGAAGCCUCCCAACUACUCCAUCAGGGGACCAGCCUGUAUCGGAAGCGCGUACUAGUUGCGGUACGAUCACCCCCAGCCCCUAUACUACGGCGACAAACCUGGAAAAUUACCCGAUUCUCUGGUUUGCCUUUUCUUCUAACCCCCUUCCAUAGGAAAGUGCUGCGAAAGCAAACCGCCAGUUUGCUACAAGACAGGUGCUCCAUAGAAGCCCCAUAUAGCCGGUCUCAGACGGGUAGACGGGGAGCCAAUGACGACCCAGCCCAGGUACCUCCACUAAGUGAUGGAAACCAAUGUGGUAGAGUAAACAACGGAAGGGAUCAAUUAGUUACGCCCGGGGCCGGUAGCCAGGCGAAUGAGCCACGCGCAUACCAACACGUCCCGGCUGGCUCGAUGUCCUCCACUUUACAGCGACAAAAACCCGUCUAUCAUUUCCUCCUUAGGGAAUUGGAUCGACACCGCACCUCUGCAAGCACUCCCCGGACGUGCCCGUCUGCAUGGAUCCCUUUCCUACUGGGCGAGCCCGCUCCGCCUCAUUGCAGCCGGACCGACGCUCAGGCCAUUUCUUUCGCAAGUGUGGACCAUCAUAGGGUUAACCCACUGUCCUUAAAUCUAAAAAGUCCUUGCUCUACAUCGCCAUUACCACGGUUUCAUCAACUGGGUACGAGCCGCCCUUCCGCAUCCAAUACCAGCAUUACCCAACAGAUCCUGCUUGGGCAGGGCUGUGGUGCCCGCAUGCACUGCACCAACGGUCUGCGCCUCAAUCGUCCAAUACGUCCGGGUGGACUCAAGGGUAACGCCCCUGCUUACGUCGAGACGGCGAAAGAUUGCCCGCUGACGCCAGAGGUAAUACGAACCCGGGAAAUUCUUUUGCUGGCCUCCGUACCAGGGGCAAUUCCCCUACUCGUUAAAGCGGUUCUGGGACAUCAACCAAUACCAUUAUUAUCUGCCAUGUGCUUCACUAAGUUCCUUCGAUGUUUUAGUAUUGAUACGGCAUAUCGAGGUCAUGAGCCAACGCUUCCGCCACCCGUUUCAAGGACUCCUCCUAAGGCUCCAAUAAAGGAGUGUGAACGUAGCUUGGCGAAUAAGACUGACCACAUAUCGAGGCUAGUGCGACUAACCAGGAUGAGGAUAUCCUAUAUGUCCACAUGCAUCCAAGUUUAUGUCUGGCCGGAUGAAGAUAUCCGGGGCGGAAGAGCGUAUCUGAUUACAUGGCCGAUUCUUCGAGAGCCUCCACUUAAUGCCCGGGUUGCCGGUGGGAAUCGUGAUCCGCAUGAGCAGUUCGUACUACUACCUCCCGUGGUCAAGCUGCGGUCUCUCCUAUCUUUUGCGCACCGCGUUCGUCAAAGGUCCCCAUGCCCCCUGCCCCUGAUCUGCCAUUGUACCCUCCGUCUUCACGGGCCGAGGAUUAUACCGGUACGGUGGCUGCCGGUAUCCUUUUCUGAAGUGCUUUGUAUGUCUGGAAAGCAGACUACACUUGAUUCGUGCAAGAUUUAUGCCGGUAGAGUUCUUACCUCACGAGUCGAGAGCUUGACCAGGUCUCGUGUCCAGCGACGAUCAGAACGAGCAGCACUCGGAACCGUGGACCAACUAGAACUGUUAACUAGCGCCUCACCGAGUGCUAGAACGGUUGAUCGAAGUUCAGUGGCCUUACGGUCCGGGUCUGGGUUCUACACCUCAUUAUAUGACGGCUCACAGGAACAUCUAUGUCGGCUGUUCGAUGCGGGUAACCAGGCGACGAAAGCGAUGACACGAGCUGGACGCGCGCGAUUUGGUUCGAUGAACAGCCCUCAGUUUCGCACGCCAUCUUCGAACUCCAAAUGUCAAACCGUAGAGGUGACACGCUCCGCUACGUUGGCCGGAGGGCAGGUACGUACGCCUCCGUCUACAAUACAUCGGGAAGUAUGCCAGGUAGGGACUUUGACAGGUGUACUUGCCGCCUUUCAUCUGAAGUGGGCCUUCUCCUGCUUGAACAUUAACUUAAAGCCCCGCUAUAACCCGAAUUCACUCGCUGUAAUAAUCCUUGCGAGAAGCCUAAACCAAACAUGUUCCCUCAGGCGAAACAGAGGGCACCGGGGCUACGCUGAUCAGGAGCGAUUCACUUCGCGGUUGGUAACGUCGCGUAGGAACAGACCUUGCUCUCGUCUUCAACUGGAGCUGACUGCUGCUUGUAUACCCCGUGCUUUCCAAACAUAUGAAAGUCGAUUCUCCUUGAGAAUGUAUGCGUGGGUCAACUCACUCUGUUACUUCUGUGUUACUGACCCGGGUCGCAAAACGCGAAGCGAGAGGCGAAUUGUGCGCUCCCGCGGUUUGGGGCCGGAACGUUUAAAAUACAUUAGUGGGUAUGGCGAGUCCGUUGCGCCAAAUUUACUGUUCCGAGUCGGCCGCCACCUUCGAGGCAUUCUGGACGAUGAGCGUACCGAACCGAGGCCUUCACGUUGGUUUGUUCCUCUGAAGCGGUGUAAAGGUCAUGAGGCAUGGGCGCUAGUGAGUUCUAUCUGGGCCAGUUCUGGCAUGCCCGAAGAUUGGCUUUUUAGGUGUGUAGAGCUAGUCGGAGAUUAUGUACGUUUCCAAAUACAACCAUGGCCGGUGCUAGCCUGGCGUGGCGGGAACAGCGGCUUUUAUAAUUGUCGGGGGAUGUUUAGAGAAUCAUCUUUUCGAACGCCAUAUCUGCCUCAUACCCCACUCGUACAAUUCGGUCAAAAGCCCUGCGAGCUGUUAACGAUGCAGUGUGCUCGACGCUAUCUGCAUUCCAGCGCUUACCCGGCAGUCAUCUCAUUCAGCGCCGAGGCAGACACUCUAAACUACGCGGCUGUUCUACCUGCGACUCAAUUAAUAAACUGUGAACGCGCUCCGGACCAAACUGGAAUCAGACUCCAAUCUGAACUCGCAAUUAUCAUUAUGAUGGGUCAUAAGGUAGGUCACCUUUUCGUCACAGCAGGAAUGAUCGGCGGCUUGAUAACUCGGCAGAUAAGAAUGAUUGAUCACACUACUAGUGGACUACAGUCUAAUGGGAAAAAGAUGCCGUCCAAGCGCGUUCAUUCUAGGCACAACGUGUUCUCGGAGCUCGUUUUCAACACAGCACUUACCCGGACUUCCGAACGUAAAGGAAUCGGCGUUAUAAGACGGAUGGGGUAUAAUAUUGUACACCAAUGUCACUCUGUGGUGCUCGAUUCUAAGAAGUUUCGUCCGCCUAGCCCAAUGUCCCCACUGCACCUCCGUAACGGUUACUGGGAUAGCGUAGGUUACUGCACGAUUUUUCCUUUUGCUAGGCAACCUGUAGAUCAGAAACGAUCUGACUGCCAUUUCAAUGACGUCUUCUCACAACCACGUCCCCCGGGGACACGUCUCAAACUCACGGGUUACGGGCGUCGUGAAGUCGAUCGUCAGCACCAAAACGUAUCGCAUCUUCGAAGAUCGGAGUCCGUUGACCAAGCCAAGCUAUUGAGGGCAACUCGCGAGCUAAUUCCGUCCAAAUCGUUCACUGCUUCCGAAGCACGGAUCCACUGGUGUCAAGACCGACACCCUGCGCGUAUAAGGACGAGCAAAUUAUUAGAGCCCACGUCGUCUUUGCAAUCACGGAUGAUUUUACUCCUAGAUGUGGUGGAUCUGACUAGCCUUUCGCGUGUUACAUUACAGGACGUCUUCAAUGCCGUAACGACUAAGUACUCAGAGCCAGAUCGGAUGUUUCCCCCCAUGAGUACACUCAUCUUGACGUGUGGCUGCCAGCUCAAACAACAAAAUAUAGACUUAACAAAUAAAAGUGCAGCGCUUACGCCUGCCCAAUUCCUGCGGAAGAAACGGACCUUACUAGGAAGUGUCAAGAUGACCACCCGAAUCCUGUCGUUCUUUAUUGGACGCAAAAUUGUUUCUAGGUAUGAGAGGUGUUGCCUUAAUACGCUGGUCAGGGGAAUUCGUCAAAGCCCUUGCGUGAAUACUAGCGAUAGUCCAAUAACCAACUAUGGAAAGUUCACCCCGCCACAUGAUUCUACUCUGCGAACCUAUACAAAUUCUUGGAAGGGGAAGGCCUUUCGUGGAAUUCGGGGCACGAUAAAUCCUGGUGCCUUCAUUUGGCAUAUGCCAUGUAUAUAUCUUGGGCUGGUUGUGCCGUGGGCGGAAGACCUUUUGGCCCCAAUGUUUGGUUAUCUAAGCGGUCAGGCAGGCAAGCAGGACAGGUUUAGAAGGUAUAGAGCGCAUAAAGGACUGCCCACGGGACCGCACCUCCCGUCGGGACUCAUACAUUACAAGAAGAUACCGCACAUAAUAAAGCUCAUUGUCUCACGCUUUUUCGCCUUUGCGGGGCUUUUUUUGCCUUACUCGUUCGCGGACUGUGAGAACGUUGGUCCGACUCAUUCGGUCUCCACUGUGCAUAAGCUGCUGCAGUCUUCUUUAUACACACCCUUGGUGCCUUUAGUGCCAAUACGACAUUGGGUUUGUUCCAAGUACAACAUCAGCCCUGUUUAUAUGUUAAAACAUCGCGGAGCCGAAGCGGAUCUCCAAACGGCGAAAACGUUCGCUUCGUUGAGGGCGGCUCUGAAUCUAGCUCAGACUGCGACGUUACUGAAUCUGAUCAGCGAGCGUAUAUGGCUUGCUCCCAGACUCGCUCGAGGUGCUAUAUCGAGGCUGGCACGGUUUCAAGUGUGUAAAUCGGGGCAGGUCUCAAUCCUUUACAUCCGCGGUACCAGGUUUUUGCAUCGUUUGUAUGAUCAACAAAUCGUCAUUUCGAAAGAAUAUUACAGUUUCGAGUUGCCUGUGAGCGCGGAAUUGCAUGCGUCAUGCCGCUGCGGCUUACCAUCAAUCCACCGCUCGGUGAUGUUGGAAGCACGUCCUCGGCUCAAGCAUGUUCCCGUGGCACUAUGGUAUACUGGGGUUCGAGAUGGUUCCCAUUAUUUUGAUAUACACUCGGAACACUCAUCCAUGCCCACUGAGUUUUGUUUGAGUCCAAUUGCAUCCCAGACAUUACUUGAAGAGCGGCACCGCAUCAAUCUCCUAGAUCAGUCAAGUCCUCCUGGCUGCACCGGAGGCGUAUGCCGUGAGUUGAGGAAUGAUACCACAUGCGAAAAGACGCACGUAUUAAUUUGUUCGGGUUCGGCGCGCGGCAACUGGAUUAACAUGUCGCAUAAAGGCACGACUAACUCGCCCGAAGGCGCCCGGGAUGGCGACAAGGGCCUGGUUAUCCGCGGGCCAUACGCUGCAACUGGCGCUCUACCUGCGAGUUCUUUAAAGAGCCUAUGUACCUUCGGGCGAGUUUGUAGGGAAUUAUCUAGCCAUGAGAAUGGAGUGUCAUCAGUCGGGAACCUUGGACGCGCUUGGAUCCACCAAGUGUCUCGUCCGAGUGCAUCCCCCUUAGCUCCUUACCAGCCCGAUGACCAGGCGUACCAUGAGCCCAGGCGGACUUCGGUUUACCCAGAGAAUGCGGACUACUCUGACCAUGCAUCAUUAAAAGCAAUAGGUACUCCACUAAUAUUCGGGUCUGGAUGCAAAGGGGGACCAAUAAUAACUCGCCGCCUGAAGAGACUUCUUGAUGCUAAACACUUGACCGGUAAGCUGUCGUCUGGAGGAGGGCCGCUCAAUCAGGCCUCUAGCUGCCAUAUCGGGUAUUGUGAUUACCAGCUUGAUAAUUGCGUCAACCUCGACUCAGUCAGCCAAGAUGUUUUUGAUAGCAUCGGCAGAGUAUUGAUGAUGAAAAUUGCCGGUCGUCUCAGUGGUAGGGUAGCGCGAGAGGAUACGAGGAAGCGCGAUCCGCUCAUUUUGGACGACUGGAUAAGUGAUGGGGGUCAUACAAAUACCAAGGAAGCGUGUUCUGAUCCACGGGGAAAAGAGAUACGUGCGGAAGCGAACCGACACAGGAGCACACUGUAUGGCGAUAUUACCUGUCCCUCAUUCAUUGCAUUUUAUUCUCUCUGUAGAAUACGUAAUACAAAUGAUAGGCGCAUUUUGUGCGCCCGGGCACAGAUAGUUGUUUGGGUCAAAGGUCGUCGUCUCGCGUCGAAUGAGCGGGCCCUUUGUUUAUUUAACGCUCAAACUUCCGCGCGCACUCGGUGUUGGAUAAGUAUUGGUCCGAACCAAGUACCGAUAGGAUGGGUUAAGGCAGAUUUUCUGAGGCUGUCUAAAACCCGGAUGGACUCGAAGGGCCAAAUGAAUGGAGCGGAGCUAGCCACGAGCUCUAAUAGGCGCAUAGCGUUUGUUGCACAUGCGGUGUUACAACAGUUGAGUUCCCUCACAGAAUGCUCGAUUUCUAUACCUGAAGCAGACUCGGCAUUUGGCUUUCGAACCCUCGUUAUUCUCGCUGCACAUGGGCAAGGUGAAACGAGAGCGGAUCGUCCCGUUUUGCCAAAGGCACUGUAUUAA"
#filtr prochazi jednotlive znaky a hleda zacatecni kodon "ATG" -> jede dalsi loop dokud nenajde koncici kodon "UAG/UAA/UGA" a mezitim vse dava do listu raw
def filtr(soubor,):
    raw = []
    konec = 0
    search = 0
    string ="AUG"
    for i in range(len(soubor)-2):
        prvniznak = soubor[i]
        druhyznak = soubor[i+1]
        tretiznak = soubor[i+2]
        if prvniznak + druhyznak + tretiznak =="AUG" and search == 0:
            search = 1
            count = 0
            continue
        if search == 1:
            if count == 2:
                # print(prvniznak,druhyznak,tretiznak)
                count = 0
                check = prvniznak + druhyznak + tretiznak
                if check == "UAG":
                    raw.append(string)
                    string ="AUG"
                    search = 0
                    break
                elif check == "UAA":
                    search = 0
                    raw.append(string)
                    string ="AUG"
                    break
                elif check == "UGA":
                    search = 0
                    raw.append(string)
                    string ="AUG"
                    break
                else:
                    string += check
            else:
                count+=1
    return raw

#vezme list raw a projizdi trojice a porovnava je s seznamem kodonu a proteinu(?) a dosazuje do protein finalniho stringu
def search(seznam):
    genetic_code = {
    'UUU': 'F', 'UUC': 'F', 'UUA': 'L', 'UUG': 'L',
    'UCU': 'S', 'UCC': 'S', 'UCA': 'S', 'UCG': 'S',
    'UAU': 'Y', 'UAC': 'Y', 'UAA': '', 'UAG': '',
    'UGU': 'C', 'UGC': 'C', 'UGA': '', 'UGG': 'W',
    'CUU': 'L', 'CUC': 'L', 'CUA': 'L', 'CUG': 'L',
    'CCU': 'P', 'CCC': 'P', 'CCA': 'P', 'CCG': 'P',
    'CAU': 'H', 'CAC': 'H', 'CAA': 'Q', 'CAG': 'Q',
    'CGU': 'R', 'CGC': 'R', 'CGA': 'R', 'CGG': 'R',
    'AUU': 'I', 'AUC': 'I', 'AUA': 'I', 'AUG': 'M',
    'ACU': 'T', 'ACC': 'T', 'ACA': 'T', 'ACG': 'T',
    'AAU': 'N', 'AAC': 'N', 'AAA': 'K', 'AAG': 'K',
    'AGU': 'S', 'AGC': 'S', 'AGA': 'R', 'AGG': 'R',
    'GUU': 'V', 'GUC': 'V', 'GUA': 'V', 'GUG': 'V',
    'GCU': 'A', 'GCC': 'A', 'GCA': 'A', 'GCG': 'A',
    'GAU': 'D', 'GAC': 'D', 'GAA': 'E', 'GAG': 'E',
    'GGU': 'G', 'GGC': 'G', 'GGA': 'G', 'GGG': 'G'
}
    found =0
    completion = [""]
    for g in seznam:
        vazba = ""
        for i in range(0,len(g) -2,3):
            searchznak1= g[i]
            searchznak2= g[i+1]
            searchznak3= g[i+2]
            for k in genetic_code:
                if k == searchznak1 + searchznak2 + searchznak3:
                    found =1
                    vazba +=genetic_code[k]
            if found == 0:
                vazba += "?"
        completion.append(vazba)
    return completion

filtr = filtr(fileitemsrna)
completion = search(filtr)
print(completion[1])

